{"remainingRequest":"/Users/seelengxd/.config/yarn/global/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/seelengxd/Desktop/scse2/src/App.vue?vue&type=template&id=472cff63&","dependencies":[{"path":"/Users/seelengxd/Desktop/scse2/src/App.vue","mtime":1579314414918},{"path":"/Users/seelengxd/.config/yarn/global/node_modules/cache-loader/dist/cjs.js","mtime":1579312430199},{"path":"/Users/seelengxd/.config/yarn/global/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1579312430643},{"path":"/Users/seelengxd/.config/yarn/global/node_modules/cache-loader/dist/cjs.js","mtime":1579312430199},{"path":"/Users/seelengxd/.config/yarn/global/node_modules/vue-loader/lib/index.js","mtime":1579312430643}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}